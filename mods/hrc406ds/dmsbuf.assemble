DMSBUF   CSECT                                                          DMS00010
*.                                                                      DMS00020
*  Module name -                                                        DMS00030
*                                                                       DMS00040
*         DMSBUF                                                        DMS00050
*                                                                       DMS00060
*  Function -                                                           DMS00070
*                                                                       DMS00080
*         Support console stack buffer manipulations in VM/370          DMS00090
*                                                                       DMS00100
*         MAKEBUF, DROPBUF, SENTRIES                                    DMS00110
*                                                                       DMS00120
* The stack levels are described by a list of two word                  DMS00130
* entries anchored in NUCXXXXX and NUCYYYYY. The first                  DMS00140
* word points to the 8 byte entry for the previous                      DMS00150
* stack buffer. The second word has the line number                     DMS00160
* of the previous stack buffer.                                         DMS00170
*                                                                       DMS00180
         USING NUCON,0                                                  DMS00190
         USING DMSBUF,R12                                               DMS00200
         EJECT                                                          DMS00210
*.                                                                      DMS00220
* Entry condition -                                                     DMS00230
*                                                                       DMS00240
*        R1 => CL8'MAKEBUF'                                             DMS00250
*              8X'FF'                                                   DMS00260
*                                                                       DMS00270
* Exit condition -                                                      DMS00280
*                                                                       DMS00290
*        R15 = New stack number                                         DMS00300
*.                                                                      DMS00310
DMSBUFMK DS    0H                                                       DMS00320
         ENTRY DMSBUFMK
         LR    R12,R15            Establish global                      DMS00330
         LA    R15,DMSBUFMK-DMSBUF      base                            DMS00340
         SLR   R12,R15                                                  DMS00350
*                                                                       DMS00360
         LR    R2,R14             Hold R14 across call                  DMS00370
         LA    R0,1               Just need 8 bytes                     DMS00380
         DMSFREE DWORDS=(0),TYPCALL=BALR,TYPE=NUCLEUS
         MVC   0(8,R1),NUCFSTLN   Save current stack lvl                DMS00400
*                                 first and last line ptrs              DMS00410
         ST    R1,NUCFSTLN        Hold last stack info                  DMS00420
         SR    R15,R15                                                  DMS00430
         ST    R15,NUCLSTLN       Clear the last line pointer           DMS00440
         LA    R15,1                                                    DMS00450
         A     R15,NUCNBSTK       Increment stack level                 DMS00460
         ST    R15,NUCNBSTK                                             DMS00470
* The stack level number becomes the MAKEBUF return code                DMS00480
         LR    R14,R2             Return address                        DMS00490
         BR    R14                Back to the caller                    DMS00500
*.                                                                      DMS00510
* Entry condition -                                                     DMS00520
*                                                                       DMS00530
*        R1 => CL8'SENTRIES'                                            DMS00540
*              8X'FF'                                                   DMS00550
*                                                                       DMS00560
* Exit condition -                                                      DMS00570
*                                                                       DMS00580
*        R15 = Total number of stacked lines                            DMS00590
*.                                                                      DMS00600
DMSBUFSE DS    0H                                                       DMS00610
         ENTRY DMSBUFSE
         L     R15,NUCNLSTK       Number of lines in Pgm stack          DMS00620
         BR    R14                Return the count                      DMS00630
*.                                                                      DMS00640
* Entry condition -                                                     DMS00650
*                                                                       DMS00660
*        R1 => CL8'DROPBUF'                                             DMS00670
*              CL8'level'     (Optional)                                DMS00680
*              8X'FF'                                                   DMS00690
* Exit condition -                                                      DMS00700
*                                                                       DMS00710
*        R15 = 0, Successful                                            DMS00720
*              1, Invalid level number                                  DMS00730
*              2, Level number does not exist                           DMS00740
*.                                                                      DMS00750
DMSBUFDB DS    0H                                                       DMS00760
         ENTRY DMSBUFDB
         LR    R12,R15           Establish global                       DMS00770
         LA    R15,DMSBUFDB-DMSBUF  base                                DMS00780
         SLR   R12,R15                                                  DMS00790
         LR    R11,R14            Hold return address here
*                                                                       DMS00800
         L     R5,NUCNBSTK        Default stack number to free
         LA    R1,8(,R1)          Point to possible argument
         CLI   0(R1),X'FF'        Any argument?
         BE    DBPARMOK           If none, use the default
*                                                                       DMS00840
         SR    R2,R2              R2-R3 used to build number
         SR    R3,R3                                                    DMS00860
         SR    R5,R5              R4 has next digit
         LA    R15,8              Loop counter
DBPARMLP DS    0H                 Loop for all digits
         CLI   0(R1),C' '         Found end of the number?
         BE    DBPARMOK           Yes, go process
         CLI   0(R1),C'0'         Valid EBCDIC digit?
         BL    ERROR1             Nope
         CLI   0(R1),C'9'         Valid EBCDIC digit?
         BH    ERROR1             Nope
         IC    R5,0(,R1)          Next digit
         N     R5,=A(X'0F')
         M     R2,=F'10'                                                DMS00980
         AR    R3,R5              Accumulate the total
         LA    R1,1(,R1)          Step to next digit
         BCT   R15,DBPARMLP       Check all 8 bytes
DBPARMOK DS    0H
*
* Release all the stack levels from the current level
* down to and including the level specied in the plist
*                                                                       DMS01340
         SLR   R10,R10             Accumulate released line
*                                     count as we go
         L     R6,NUCNBSTK         Current stack level
         CR    R5,R6               Does parm level exist?
         BH    ERROR2              ERROR2 if not
         SR    R0,R0
DBMAINLP DS    0H                  Delete next stack level
         LM    R3,R4,NUCFSTLN NUCLSTLN Get stack level ptrs
         LTR   R4,R4               If level is empty then
         BZ    NOLINES                no lines to delete
*                                                                       DMS01460
* Loop to release all the lines in the stack
*                                                                       DMS01480
FRETSTAK DS    0H
         LR    R1,R3          Address of next line
         SR    R14,R14
         IC    R14,5(,R3)     Length
         LA    R14,5+7(R14)   Convert length + 5 to doublewords
         SRL   R14,3
         LR    R0,R14         Length to R0 for DMSFRET
         L     R3,0(,R3)      Fetch next line ptr
         LR    R8,R1          Address being remove for later
         DMSFRET DWORDS=(0),LOC=(1),TYPCALL=BALR                        DMS01560
         LA    R10,1(,R10)    Increment lines released counter
         CR    R4,R8          Was that the last line in stack?          DMS01580
         BNE   FRETSTAK       Keep going if not
NOLINES  DS    0H
*                                                                       DMS01610
*        Any more levels left to release?
*                                                                       DMS01630
         XC    NUCFSTLN(8),NUCFSTLN    Clear stack pointers
         LTR   R1,R3              Everything cleared?
         BZ    DBEXIT0            Exit if down to 0
         MVC   NUCFSTLN(8),0(R3)  Swap ptrs to the previous level
         LA    R0,1               Release the doubleword of ptrs
         DMSFRET DWORDS=(0),LOC=(1),TYPCALL=BALR                        DMS01710
         BCTR  R6,0               Decrement to chk prior lvl
         CR    R5,R6              Any more to release?
         BNH   DBMAINLP           Iterate Main loop if so
*                                   to delete the next level
* Clean up and return
*                                                                       DMS01770
DBEXIT0  DS    0H
         L     R15,NUCNLSTK       Decrement stacked lines
         SR    R15,R10              by number released
         ST    R15,NUCNLSTK
*
         LH    R15,NUMFINRD       Decrement finished reads
         SR    R15,R10              by number released
         STH   R15,NUMFINRD
*
         ST    R6,NUCNBSTK        Reset current stack number
         LR    R14,R11            Restore return address
         SR    R15,R15            Everything's fine
         BR    R14                Return to caller
*                                                                       DMS01890
ERROR1   DS    0H                                                       DMS01900
         LR    R14,R11            Restore return address
         LA    R15,1              Invalid argument
         BR    R14                Return to caller
*
ERROR2   DS    0H
         LR    R14,R11            Restore return address
         LA    R15,2              Buffer does not exist
         BR    R14
*                                                                       DMS01930
*                                                                       DMS01940
         REGEQU ,                                                       DMS01950
         NUCON                                                          DMS01960
         END                                                            DMS02030
